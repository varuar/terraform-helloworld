name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply and Capture IP
        id: apply
        run: |
          terraform apply -auto-approve
          echo "::set-output name=INSTANCE_IP::$(terraform output -raw public_ip)"

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ steps.apply.outputs.INSTANCE_IP }} >> ~/.ssh/known_hosts

      - name: Run setup script on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@${{ steps.apply.outputs.INSTANCE_IP }} << 'EOF'
            sudo yum update -y
            sudo yum install -y httpd
            sudo systemctl start httpd
            sudo systemctl enable httpd
            sudo chown ec2-user:ec2-user /var/www/html
          EOF

      - name: Copy files to EC2
        run: |
          scp -i ~/.ssh/id_rsa hello.html ec2-user@${{ steps.apply.outputs.INSTANCE_IP }}:/var/www/html

      - name: Restart Apache
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@${{ steps.apply.outputs.INSTANCE_IP }} 'sudo systemctl restart httpd'
