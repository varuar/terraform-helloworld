name: Automated Deploy to EC2

on:
  push:
    branches:
      - master
    paths:
      - .github/workflows/deploy.yml
      - terraform/creation/terraform-helloworld.tf

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PRIVATE_KEY_BASE64: ${{ secrets.PRIVATE_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js dependencies
        uses: actions/setup-node@v2
        with:
          node-version: '21.6.1'
      - run: npm install 

      - name: Build React app
        run: npm run build

      - name: Terraform Init
        run: |
          cd terraform/creation
          terraform init -var="private_key_base64=${{ env.PRIVATE_KEY_BASE64 }}" -var="aws_access_key_id=${{ env.AWS_ACCESS_KEY_ID }}" -var="aws_secret_access_key=${{ env.AWS_SECRET_ACCESS_KEY }}"

      - name: Terraform Apply to Manage EC2
        run: |
          cd terraform/creation
          terraform apply -auto-approve -var="private_key_base64=${{ env.PRIVATE_KEY_BASE64 }}" -var="aws_access_key_id=${{ env.AWS_ACCESS_KEY_ID }}" -var="aws_secret_access_key=${{ env.AWS_SECRET_ACCESS_KEY }}"

      - name: Extract EC2 Details
        id: ec2-details
        run: |
          PUBLIC_IP=$(terraform output -raw public_ip)
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Run setup script on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@${{ env.PUBLIC_IP }} << 'EOF'
            sudo yum update -y
            sudo yum install -y httpd
            sudo systemctl start httpd
            sudo systemctl enable httpd
            sudo chown ec2-user:ec2-user /var/www/html
          EOF

      - name: Copy files to EC2
        run: |
          scp -i ~/.ssh/id_rsa hello.html ec2-user@${{ env.PUBLIC_IP }}:/var/www/html

      - name: Restart Apache
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@${{ env.PUBLIC_IP }} 'sudo systemctl restart httpd'
